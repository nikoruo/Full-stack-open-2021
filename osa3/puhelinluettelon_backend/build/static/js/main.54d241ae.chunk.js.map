{"version":3,"sources":["components/Filter.js","components/Persons.js","components/PersonForm.js","components/Notification.js","services/contacts.js","App.js","index.js"],"names":["Filter","value","onChange","Persons","contacts","deleteContact","map","person","name","number","onClick","id","PersonForm","onSubmit","contact","nameChange","numberChange","type","Notification","info","notificationStyle","color","colour","background","fontSize","borderStyle","borderRadius","padding","marginBottom","className","style","text","baseUrl","contactServices","getAll","axios","get","then","response","data","create","newObject","post","delContact","delete","update","put","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","infoMessage","setInfoMessage","initializeContacts","console","log","contactService","initialContacts","catch","error","setTimeout","useEffect","ContactsToShow","length","filter","toLowerCase","includes","event","target","preventDefault","newContact","window","confirm","oldUser","find","c","returnedContact","concat","deletedContact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.54d241ae.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n//komponentti, jolla palautetaan filtter input\r\nconst Filter = ({ value, onChange }) => {\r\n    return (\r\n        <div>\r\n            filter shown with: <input value={value} onChange={onChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Filter","import React from 'react'\r\n\r\n//komponentti, jolla palautetaan list� kontakteista\r\nconst Persons = ({ contacts, deleteContact }) => {\r\n    return (\r\n        <div>\r\n            {contacts.map(person =>\r\n                <div key={person.id}>\r\n                    {person.name} {person.number} <button onClick={()=>deleteContact(person)}>delete</button>\r\n                </div>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\n//komponentti, jolla palautetaan k�ytt�jien lis�ykseen tarkoitettu form\r\nconst PersonForm = ({ onSubmit, contact }) => {\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit}>\r\n                <div>\r\n                    name: <input value={contact.name} onChange={contact.nameChange} />\r\n                </div>\r\n                <div>\r\n                    number: <input value={contact.number} onChange={contact.numberChange} />\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\">add</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\n//komponentti, jolla palautetaan virheilmoitus\r\nconst Notification = ({ info }) => {\r\n\r\n    const colour = info===null ? 'grey' : info.colour \r\n\r\n    const notificationStyle = {\r\n        color: colour,\r\n        background: 'lightgrey',\r\n        fontSize: '20px',\r\n        borderStyle: 'solid',\r\n        borderRadius: '5px',\r\n        padding: '10px',\r\n        marginBottom: '10px'\r\n}\r\n\r\n    if (info === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"error\" style={notificationStyle}>\r\n            {info.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification;","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst delContact = newObject => {\r\n    const request = axios.delete(`${baseUrl}/${newObject}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst contactServices = { getAll, create, delContact, update }\r\n\r\nexport default contactServices;","import React, { useState, useEffect } from 'react'\r\nimport Filter from './components/Filter'\r\nimport Persons from './components/Persons'\r\nimport PersonForm from './components/PersonForm'\r\nimport Notification from './components/Notification'\r\nimport contactService from './services/contacts'\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([])\r\n    const [newName, setNewName] = useState('')\r\n    const [newNumber, setNewNumber] = useState('')\r\n    const [newFilter, setNewFilter] = useState('')\r\n    const [infoMessage, setInfoMessage] = useState(null)\r\n\r\n    //ladataan kontaktit palvelimelta\r\n    const initializeContacts = () => {\r\n        console.log('effect')\r\n        contactService\r\n            .getAll()\r\n            .then(initialContacts => {\r\n                console.log('promise fulfilled')\r\n                setPersons(initialContacts)\r\n            })\r\n            .catch(error => {\r\n                console.log('fail')\r\n\r\n                setInfoMessage({\r\n                    text: `Error while loading contacts. Please try again and refresh the page.`,\r\n                    colour: 'red'\r\n                })\r\n\r\n                setTimeout(() => {\r\n                    setInfoMessage(null)\r\n                }, 5000)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        initializeContacts()\r\n    }, [])\r\n\r\n    //k�ytt�j�n lis�ys\r\n    const addContact = (event) => {\r\n        event.preventDefault()\r\n        console.log('Adding new contact')\r\n        const newContact = {\r\n            name: newName,\r\n            number: newNumber,\r\n            id: null            \r\n        }\r\n\r\n        //testataan, l�ytyyk� k�ytt�j� jo vai ei\r\n        if (persons.map(person => person.name).includes(newContact.name)) {\r\n            //l�ytyi, kysyt��n haluaako p�ivitt�� vanhaa vai ei\r\n            if (window.confirm(`${newContact.name} is already added to phonebook, replace the old number with a new one?`)) {\r\n                //halusi, joten p�ivitet��n vanhalle kontaktille uusi numero\r\n\r\n                const oldUser = persons.find(c => c.name === newContact.name)\r\n                newContact.id = oldUser.id\r\n\t\t\t\t\r\n                contactService\r\n                    .update(oldUser.id, newContact)\r\n                    .then(returnedContact => {\r\n                        console.log(returnedContact)\r\n                        setPersons(persons.map(c => c.id !== oldUser.id ? c : returnedContact))\r\n\r\n                        setNewName('')\r\n                        setNewNumber('')\r\n\r\n                        setInfoMessage({\r\n                            text: `Updated the number of ${returnedContact.name} to ${returnedContact.number}`,\r\n                            colour: 'green'\r\n                        })\r\n                        setTimeout(() => {\r\n                            setInfoMessage(null)\r\n                        }, 2000)\r\n                    })\r\n                    .catch(error => {\r\n                        console.log('fail')\r\n\t\t\t\t\t\t\r\n                        setInfoMessage({\r\n                            text: `Information of ${oldUser.name} has already been removed from the server`,\r\n                            colour: 'red'\r\n                        })\r\n\r\n                        setPersons(persons.filter(c => c.id !== oldUser.id))\r\n\r\n                        setTimeout(() => {\r\n                            setInfoMessage(null)\r\n                        }, 5000)\r\n                    })\r\n            }\r\n        } else {\r\n            //uuden kontaktin lis��minen\r\n            contactService\r\n                .create(newContact)\r\n                .then(returnedContact => {\r\n                    console.log(returnedContact)\r\n                    setPersons(persons.concat(returnedContact))\r\n\r\n                    setNewName('')\r\n                    setNewNumber('')\r\n\r\n                    setInfoMessage({\r\n                        text: `Added the information of ${returnedContact.name}`,\r\n                        colour: 'green'\r\n                    })\r\n                    setTimeout(() => {\r\n                        setInfoMessage(null)\r\n                    }, 2000)\r\n                })\r\n                .catch(error => {\r\n                    console.log('fail')\r\n                    setInfoMessage({\r\n                        text: `\"${error.response.data.error}\". Error while adding new user, please try again.`,\r\n                        colour: 'red'\r\n                    })\r\n\r\n                    initializeContacts()\r\n\r\n                    setTimeout(() => {\r\n                        setInfoMessage(null)\r\n                    }, 5000)\r\n                })\r\n        }\r\n    }   \r\n\r\n    //kontaktin poistaminen\r\n    const deleteContact = (person) => {\r\n        if (window.confirm(`Delete ${person.name}?`)) {\r\n            contactService\r\n                .delContact(person.id)\r\n                .then(deletedContact => {\r\n                    console.log(\"Delete succeeded\")\r\n                    setPersons(persons.filter(c => c.id !== person.id))\r\n\r\n                    setInfoMessage({\r\n                        text: `Deleted the information of ${person.name}`,\r\n                        colour: 'green'\r\n                    })\r\n                    setTimeout(() => {\r\n                        setInfoMessage(null)\r\n                    }, 2000)\r\n                })\r\n                .catch(error => {\r\n                    console.log('fail')\r\n                    setInfoMessage({\r\n                        text: `Error while deleting ${person.name}. User might have been deleted already, please try again.`,\r\n                        colour: 'red'\r\n                    })\r\n\r\n                    setPersons(persons.filter(c => c.id !== person.id))\r\n\r\n                    setTimeout(() => {\r\n                        setInfoMessage(null)\r\n                    }, 5000)\r\n                })\r\n        }\r\n    }\r\n\r\n    //nimi -kent�n handleri\r\n    const handleNameChange = (event) => {        \r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    //numero -kent�n handleri\r\n    const handleNumberChange = (event) => {\r\n        setNewNumber(event.target.value)\r\n    }\r\n\r\n    //filtteri -kent�n handleri\r\n    const handleFilterChange = (event) => {\r\n        setNewFilter(event.target.value)\r\n    }\r\n\r\n    //n�kyviin tulevat kontaktit\r\n    const ContactsToShow = newFilter.length > 0 ?\r\n        persons.filter(contact => contact.name.toLowerCase().includes(newFilter.toLowerCase())) : persons\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <Notification info={infoMessage} />\r\n            <Filter onChange={handleFilterChange} value={newFilter} />\r\n            <h2>add a new</h2>\r\n            <PersonForm onSubmit={addContact} contact={{\r\n                name: newName, nameChange: handleNameChange,\r\n                number: newNumber, numberChange: handleNumberChange\r\n            }} />\r\n            <h2>Numbers</h2>\r\n            <Persons contacts={ContactsToShow} deleteContact={deleteContact} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}